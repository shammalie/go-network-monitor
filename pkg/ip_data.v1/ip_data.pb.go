// https://dev.bitolog.com/grpc-long-lived-streaming/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/ip_data/v1/ip_data.proto

package ip_data_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiKey string `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_ip_data_v1_ip_data_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Request) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *IpEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_proto_ip_data_v1_ip_data_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeResponse) GetEvent() *IpEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type UnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_proto_ip_data_v1_ip_data_proto_rawDescGZIP(), []int{2}
}

func (x *UnsubscribeResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type IpEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                 string  `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	City               string  `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Region             string  `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	RegionCode         string  `protobuf:"bytes,5,opt,name=regionCode,proto3" json:"regionCode,omitempty"`
	CountryCode        string  `protobuf:"bytes,6,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	CountryCodeIso3    string  `protobuf:"bytes,7,opt,name=countryCodeIso3,proto3" json:"countryCodeIso3,omitempty"`
	CountryName        string  `protobuf:"bytes,8,opt,name=countryName,proto3" json:"countryName,omitempty"`
	CountryCapital     string  `protobuf:"bytes,9,opt,name=countryCapital,proto3" json:"countryCapital,omitempty"`
	CountryTld         string  `protobuf:"bytes,10,opt,name=countryTld,proto3" json:"countryTld,omitempty"`
	ContinentCode      string  `protobuf:"bytes,11,opt,name=continentCode,proto3" json:"continentCode,omitempty"`
	InEu               bool    `protobuf:"varint,12,opt,name=inEu,proto3" json:"inEu,omitempty"`
	Postal             string  `protobuf:"bytes,13,opt,name=postal,proto3" json:"postal,omitempty"`
	Latitude           float32 `protobuf:"fixed32,14,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude          float32 `protobuf:"fixed32,15,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Timezone           string  `protobuf:"bytes,16,opt,name=timezone,proto3" json:"timezone,omitempty"`
	UtcOffset          string  `protobuf:"bytes,17,opt,name=utcOffset,proto3" json:"utcOffset,omitempty"`
	CountryCallingCode string  `protobuf:"bytes,18,opt,name=countryCallingCode,proto3" json:"countryCallingCode,omitempty"`
	Currency           string  `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrencyName       string  `protobuf:"bytes,20,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	Languages          string  `protobuf:"bytes,21,opt,name=languages,proto3" json:"languages,omitempty"`
	Asn                string  `protobuf:"bytes,22,opt,name=asn,proto3" json:"asn,omitempty"`
	Org                string  `protobuf:"bytes,23,opt,name=org,proto3" json:"org,omitempty"`
	Error              string  `protobuf:"bytes,24,opt,name=error,proto3" json:"error,omitempty"`
	Reason             string  `protobuf:"bytes,25,opt,name=reason,proto3" json:"reason,omitempty"`
	Message            string  `protobuf:"bytes,26,opt,name=message,proto3" json:"message,omitempty"`
	FirstSeen          int64   `protobuf:"varint,27,opt,name=firstSeen,proto3" json:"firstSeen,omitempty"`
	LastSeen           int64   `protobuf:"varint,28,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
}

func (x *IpEvent) Reset() {
	*x = IpEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpEvent) ProtoMessage() {}

func (x *IpEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ip_data_v1_ip_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpEvent.ProtoReflect.Descriptor instead.
func (*IpEvent) Descriptor() ([]byte, []int) {
	return file_proto_ip_data_v1_ip_data_proto_rawDescGZIP(), []int{3}
}

func (x *IpEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IpEvent) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpEvent) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IpEvent) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *IpEvent) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *IpEvent) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *IpEvent) GetCountryCodeIso3() string {
	if x != nil {
		return x.CountryCodeIso3
	}
	return ""
}

func (x *IpEvent) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *IpEvent) GetCountryCapital() string {
	if x != nil {
		return x.CountryCapital
	}
	return ""
}

func (x *IpEvent) GetCountryTld() string {
	if x != nil {
		return x.CountryTld
	}
	return ""
}

func (x *IpEvent) GetContinentCode() string {
	if x != nil {
		return x.ContinentCode
	}
	return ""
}

func (x *IpEvent) GetInEu() bool {
	if x != nil {
		return x.InEu
	}
	return false
}

func (x *IpEvent) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *IpEvent) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *IpEvent) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *IpEvent) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *IpEvent) GetUtcOffset() string {
	if x != nil {
		return x.UtcOffset
	}
	return ""
}

func (x *IpEvent) GetCountryCallingCode() string {
	if x != nil {
		return x.CountryCallingCode
	}
	return ""
}

func (x *IpEvent) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *IpEvent) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *IpEvent) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *IpEvent) GetAsn() string {
	if x != nil {
		return x.Asn
	}
	return ""
}

func (x *IpEvent) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *IpEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *IpEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *IpEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IpEvent) GetFirstSeen() int64 {
	if x != nil {
		return x.FirstSeen
	}
	return 0
}

func (x *IpEvent) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

var File_proto_ip_data_v1_ip_data_proto protoreflect.FileDescriptor

var file_proto_ip_data_v1_ip_data_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x22, 0x31, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0x3e, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x31, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa5, 0x06, 0x0a, 0x07, 0x49, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x6f, 0x33, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x49, 0x73, 0x6f, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6c, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x6c, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x45, 0x75, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x6e, 0x45, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x74, 0x63, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x63,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x32, 0x9b, 0x01, 0x0a, 0x0b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x43, 0x0a, 0x09, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x13, 0x2e, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x47, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x13,
	0x2e, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x69, 0x70, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ip_data_v1_ip_data_proto_rawDescOnce sync.Once
	file_proto_ip_data_v1_ip_data_proto_rawDescData = file_proto_ip_data_v1_ip_data_proto_rawDesc
)

func file_proto_ip_data_v1_ip_data_proto_rawDescGZIP() []byte {
	file_proto_ip_data_v1_ip_data_proto_rawDescOnce.Do(func() {
		file_proto_ip_data_v1_ip_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ip_data_v1_ip_data_proto_rawDescData)
	})
	return file_proto_ip_data_v1_ip_data_proto_rawDescData
}

var file_proto_ip_data_v1_ip_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_ip_data_v1_ip_data_proto_goTypes = []interface{}{
	(*Request)(nil),             // 0: ip_data.v1.Request
	(*SubscribeResponse)(nil),   // 1: ip_data.v1.SubscribeResponse
	(*UnsubscribeResponse)(nil), // 2: ip_data.v1.UnsubscribeResponse
	(*IpEvent)(nil),             // 3: ip_data.v1.IpEvent
}
var file_proto_ip_data_v1_ip_data_proto_depIdxs = []int32{
	3, // 0: ip_data.v1.SubscribeResponse.event:type_name -> ip_data.v1.IpEvent
	0, // 1: ip_data.v1.EventStream.Subscribe:input_type -> ip_data.v1.Request
	0, // 2: ip_data.v1.EventStream.Unsubscribe:input_type -> ip_data.v1.Request
	1, // 3: ip_data.v1.EventStream.Subscribe:output_type -> ip_data.v1.SubscribeResponse
	2, // 4: ip_data.v1.EventStream.Unsubscribe:output_type -> ip_data.v1.UnsubscribeResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_ip_data_v1_ip_data_proto_init() }
func file_proto_ip_data_v1_ip_data_proto_init() {
	if File_proto_ip_data_v1_ip_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ip_data_v1_ip_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ip_data_v1_ip_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ip_data_v1_ip_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ip_data_v1_ip_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ip_data_v1_ip_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ip_data_v1_ip_data_proto_goTypes,
		DependencyIndexes: file_proto_ip_data_v1_ip_data_proto_depIdxs,
		MessageInfos:      file_proto_ip_data_v1_ip_data_proto_msgTypes,
	}.Build()
	File_proto_ip_data_v1_ip_data_proto = out.File
	file_proto_ip_data_v1_ip_data_proto_rawDesc = nil
	file_proto_ip_data_v1_ip_data_proto_goTypes = nil
	file_proto_ip_data_v1_ip_data_proto_depIdxs = nil
}
